@import "abstracts/variables";

$eu-inpt-medium-grey: $color-medium-grey;
$eu-inpt-dark-grey: $color-dark-grey;
$eu-inpt-light-black: $color-light-black;
$eu-inpt-error: $color-error;
$eu-inpt-yellow: $element-color-yellow;
$eu-inpt-success: $color-success;
$eu-inpt-primary: $primary;
$eu-inpt-color-white: $color-white;
$eu-inpt-color-red: $element-color-red;

:host {
  display: inline-block;
  width: 320px;
}

/* form starting stylings ------------------------------- */
.eu-inpt-container {
  position: relative;
  width: 100%;
  min-height: 75px;
}

.eu-inpt-password-input.eu-inpt-container {
  min-height: 105px;
}

/* input stylings ------------------------------- */

.eu-inpt {
  font-size: 15px;
  padding: 20px 10px 9px 10px;
  display: block;
  width: 100%;
  background: transparent;
  border: none;
  border-bottom: 1px solid $eu-inpt-medium-grey;
  box-sizing: border-box;
  caret-color: $eu-inpt-color-white;
  color: $eu-inpt-color-white;
}

.eu-inpt:focus {
  outline: none;
}

/* LABEL ======================================= */
.eu-inpt-label {
  color: $eu-inpt-medium-grey;
  font-size: 15px;
  font-weight: normal;
  position: absolute;
  pointer-events: none;
  left: 10px;
  top: 20px;
  transition: 0.2s ease all;
  -moz-transition: 0.2s ease all;
  -webkit-transition: 0.2s ease all;
}

/* active state */
.eu-inpt:focus~.eu-inpt-label,
.eu-inpt:valid~.eu-inpt-label {
  top: 2px;
  font-size: 13px;
}
.eu-inpt:focus~.eu-inpt-label {
  color: $eu-inpt-primary;
}


/* BOTTOM BARS ================================= */
.eu-inpt-bar {
  position: relative;
  display: block;
  width: 100%;
}

.eu-inpt-bar:before,
.eu-inpt-bar:after {
  content: '';
  height: 1px;
  width: 0;
  bottom: 1px;
  position: absolute;
  background-color: $eu-inpt-color-white;
  transition: 0.2s ease all;
  -moz-transition: 0.2s ease all;
  -webkit-transition: 0.2s ease all;
}

.eu-inpt-bar:before {
  left: 50%;
}

.eu-inpt-bar:after {
  right: 50%;
}

/* active state */
.eu-inpt:focus~.eu-inpt-bar:before,
.eu-inpt:focus~.eu-inpt-bar:after {
  width: 50%;
}

/* Icons =================================== */

.eu-inpt-icon-container {
  display: none;
  position: absolute;
  top: 20px;
  font-size: 15px;
  color: $eu-inpt-medium-grey;
}

.eu-inpt-icon-input .eu-inpt-icon-container {
  display: block;
}

.eu-inpt-icon-input .eu-inpt {
  padding: 20px 10px 9px 23px;
}

.eu-inpt-icon-input .eu-inpt-label {
  left: 23px;
}

/* Errors =================================== */

.eu-inpt-error {
  color: $eu-inpt-color-red;
  font-size: 14px;
  margin-top: 10px;
}

.eu-inpt-error-input .eu-inpt {
  border-bottom: 1px solid $eu-inpt-color-red;
}

.eu-inpt-error-input .eu-inpt-label {
  color: $eu-inpt-color-red !important;
}

.eu-inpt-error-input .eu-inpt-bar:before,
.eu-inpt-error-input .eu-inpt-bar:after {
  background-color: $eu-inpt-color-red;
}

/* Password type =================================== */

.eu-inpt-password-input .eu-inpt {
  padding-right: 65px !important;
}

.eu-inpt-password-spec-container {
  display: none;
}

.eu-inpt-password-input .eu-inpt-password-spec-container {
  display: flex;
}

.eu-inpt-password-toggle-btn {
  position: absolute;
  right: 0;
  top: 20px;
  font-size: 15px;
  color: $eu-inpt-medium-grey;
}

.eu-inpt-password-input .eu-inpt-password-toggle-btn {
  display: flex;
  align-items: center;
  cursor: pointer;
}

.eu-inpt-password-toggle-text {
  margin-right: 6px;
  -webkit-user-select: none; /* Safari */        
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* IE10+/Edge */
  user-select: none; /* Standard */
}

.eu-inpt-password-strength-container {
  display: flex;
  margin-top: 15px;
  align-items: center;
}

.eu-inpt-password-strength-bar:not(:last-child) {
  width: 30px;
  height: 8px;
  background-color: $eu-inpt-dark-grey;
  margin-right: 8px;
  border-radius: 10px;
}

.eu-inpt-password-strength-text {
  margin-left: 4px;
  font-size: 15px;
}

$eu-inpt-pass-strengthes: (default: $eu-inpt-dark-grey,
  weak: $eu-inpt-error,
  soso: $eu-inpt-yellow,
  strong: $eu-inpt-success);

$eu-inpt-pass-strength-nums: (default: 0,
  weak: 1,
  soso: 2,
  strong: 3);

$eu-inpt-pass-strength-names: (default: '',
  weak: 'Weak',
  soso: 'So-so',
  strong: 'Strong');

@each $name,
$color in $eu-inpt-pass-strengthes {
  .eu-inpt-password-strength-#{$name} >
  .eu-inpt-password-strength-bar:nth-child(-n + #{map-get($eu-inpt-pass-strength-nums, $name)}) {
    background-color: $color;
  }
  .eu-inpt-password-strength-#{$name} {
    color: $color;
  }
  .eu-inpt-password-strength-#{$name} >
  .eu-inpt-password-strength-text:before {
    content: map-get($eu-inpt-pass-strength-names, $name);
  }
}
